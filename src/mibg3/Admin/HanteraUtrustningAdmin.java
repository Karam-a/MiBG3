/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package mibg3.Admin;

import oru.inf.InfDB;
import oru.inf.InfException;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author d-aly
 */
public class HanteraUtrustningAdmin extends javax.swing.JFrame {
    private InfDB mibdb;
    private ArrayList<String> utrustningNamn;
    private String utrNamn;
    private String id;

    /**
     * Creates new form HanteraUtrustningAdmin
     */
    public HanteraUtrustningAdmin() {
        try{
            mibdb = new InfDB("mibdb", "3306", "mibdba", "mibkey");
        }
        catch(InfException e){
            JOptionPane.showMessageDialog(null, "Det gick inte att ansluta till databasen.");
        }
        initComponents();
    }

    
      private void utrustningLista(){
          try{
            utrustningNamn = mibdb.fetchColumn("SELECT Benamning FROM Utrustning");
            for(String utrustning : utrustningNamn){
            utrustningCB.addItem(utrustning);
        }
       }
       catch(InfException e){
           JOptionPane.showMessageDialog(null, "Det gick inte att ansluta till databasen.");
       }
    }
    
    private String message(){
        utrustningLista();
        String message = "Vänligen välj ett vapen att avregistrera.";
        return message;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        utrustningCB = new javax.swing.JComboBox<>();
        avregKnapp = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLabel1.setText(message());

        utrustningCB.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        avregKnapp.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        avregKnapp.setText("Avregistrera");
        avregKnapp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                avregKnappActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(131, 131, 131)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(149, 149, 149)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(avregKnapp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(utrustningCB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(132, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(utrustningCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(avregKnapp)
                .addContainerGap(37, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private String getNamn(){
        utrNamn = utrustningCB.getSelectedItem().toString();
        return utrNamn;
    }
   
    
    private void delVap(){
    try{mibdb.delete("DELETE FROM Vapen WHERE Utrustnings_ID = " + "'" + id + "'");}
    catch(InfException e){JOptionPane.showMessageDialog(null, "Det gick inte att avregistrera utrustningen av typen vapen.");}
    }
    
    private void delKom(){
        try{mibdb.delete("DELETE FROM Kommunikation WHERE Utrustnings_ID = " + "'" + id + "'");}
        catch(InfException e){JOptionPane.showMessageDialog(null, "Det gick inte att avregistrera utrustningen av typen kommunikation.");}
    }
    
    private void delTek(){
        try{mibdb.delete("DELETE FROM Teknik WHERE Utrustnings_ID = " + "'" + id + "'");}
        catch(InfException e){JOptionPane.showMessageDialog(null, "Det gick inte att avregistrera utrustningen av typen teknik.");}
    }
    
    private void delUtr(){
        try{
            mibdb.delete("DELETE FROM Utrustning WHERE Utrustnings_ID = " + "'" + id + "'");
        
                }
        catch(InfException e){JOptionPane.showMessageDialog(null, "Det gick inte att avregistrera utrustningen från tabellen Utrustning.");}
    }
    
    private void delInnehar(){
        try{
            mibdb.delete("DELETE FROM innehar_utrustning WHERE Utrustnings_ID = " + "'" + id + "'");
        }
        catch(InfException e){
            JOptionPane.showMessageDialog(null, "Det gick inte att avregistrera utrustningen från tabellen innehar_utrustning.");
        }
    }
    
    private void avregKnappActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_avregKnappActionPerformed
       try{
            id = mibdb.fetchSingle("SELECT Utrustnings_ID FROM Utrustning WHERE Benamning =" + "'" + getNamn() + "'");
        
            if(mibdb.fetchColumn("SELECT * FROM Vapen WHERE Utrustnings_ID =" + "'" + id + "'").contains(id) && id !=null){
            delVap();
            delInnehar();
            delUtr();
            JOptionPane.showMessageDialog(null, "Avregistrering lyckad!");
            }
            else if (mibdb.fetchColumn("SELECT * FROM Kommunikation WHERE Utrustnings_ID =" + "'" + id + "'").contains(id) && id !=null){
            delKom();
            delInnehar();
            delUtr();
            JOptionPane.showMessageDialog(null, "Avregistrering lyckad!");
            }
            else if(mibdb.fetchColumn("SELECT * FROM Teknik WHERE Utrustnings_ID =" + "'" + id + "'").contains(id) && id !=null){
            delTek();
            delInnehar();
            delUtr();
            JOptionPane.showMessageDialog(null, "Avregistrering lyckad!");
            }
            else{
                JOptionPane.showMessageDialog(null, "Något gick fel.");
            }
       }
       catch(InfException e){
           JOptionPane.showMessageDialog(null, "Gick inte att ansluta till databasen.");
       }
        
    }//GEN-LAST:event_avregKnappActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HanteraUtrustningAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HanteraUtrustningAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HanteraUtrustningAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HanteraUtrustningAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HanteraUtrustningAdmin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton avregKnapp;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JComboBox<String> utrustningCB;
    // End of variables declaration//GEN-END:variables
}
